[
	//==============
	// XPath
	//==============

	// Bindings for inserting and removing comment block.

	// Expand (|) to (: | :) when : is pressed
	{
		"keys": [":"],
		"command": "insert_snippet",
		"args": {
			"contents": ": ${0} :"
		},
		"context": [
			{ "key": "selector", "operand": "meta.interpolation.xsl - meta.interpolation.xsl comment" },
			{ "key": "setting.auto_match_enabled" },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\($", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\)", "match_all": true }
		],
	},
	// Reduce (:|:) to | when backspace is pressed
	{
		"keys": ["backspace"],
		"command": "chain",
		"args": {
			"commands": [
				{"command": "left_delete" },
				{"command": "right_delete" },
				{"command": "left_delete" },
				{"command": "right_delete" }
			]
		},
		"context": [
			{ "key": "selector", "operand": "comment.block.xpath" },
			{ "key": "setting.auto_match_enabled" },
			{ "key": "selection_empty", "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\(:$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^:\\)", "match_all": true }
		]
	},
	// Expand (:|:) to (: | :) when space is pressed
	{
		"keys": [" "],
		"command": "insert_snippet",
		"args": {
			"contents": " ${0} "
		},
		"context": [
			{ "key": "selector", "operand": "comment.block.xpath" },
			{ "key": "setting.auto_match_enabled" },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\(:$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^:\\)", "match_all": true }
		],
	},
	// Reduce (: | :) to (:|:) when backspace is pressed
	{
		"keys": ["backspace"],
		"command": "chain",
		"args": {
			"commands": [
				{"command": "left_delete" },
				{"command": "right_delete" }
			]
		},
		"context": [
			{ "key": "selector", "operand": "comment.block.xpath" },
			{ "key": "setting.auto_match_enabled" },
			{ "key": "selection_empty", "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\(: $", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^ :\\)", "match_all": true }
		]
	},
]